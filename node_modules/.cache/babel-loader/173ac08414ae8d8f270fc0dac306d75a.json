{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL I5\\\\Documents\\\\React\\\\Projects\\\\faculty-management-master\\\\src\\\\user\\\\components\\\\ContactInformation\\\\ContactInfoEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_OPTIONAL } from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = {\n  //REPLACE WITH DATABASE\n  residentAddress: {\n    houseNo: \"TEST\",\n    street: \"TEST\",\n    locationType: \"1\",\n    barangay: \"TEST\",\n    city: \"TEST\",\n    province: \"TEST\",\n    zip: \"TEST\"\n  },\n  permanentAddress: {\n    houseNo: \"TEST2\",\n    street: \"TEST2\",\n    locationType: \"2\",\n    barangay: \"TEST2\",\n    city: \"TEST2\",\n    province: \"TEST2\",\n    zip: \"TEST2\"\n  },\n  telephoneNum: \"TEST\",\n  cellphoneNum: \"TEST\",\n  alternateEmail: \"TEST\"\n};\n\nconst ContactInfoEdit = props => {\n  _s();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    residentAddress: {\n      houseNo: {\n        value: DUMMY_DATA.residentAddress.houseNo,\n        isValid: false\n      },\n      street: {\n        value: DUMMY_DATA.residentAddress.street,\n        isValid: false\n      },\n      locationType: {\n        value: DUMMY_DATA.residentAddress.locationType,\n        isValid: false\n      },\n      barangay: {\n        value: DUMMY_DATA.residentAddress.barangay,\n        isValid: false\n      },\n      city: {\n        value: DUMMY_DATA.residentAddress.city,\n        isValid: false\n      },\n      province: {\n        value: DUMMY_DATA.residentAddress.province,\n        isValid: false\n      },\n      zip: {\n        value: DUMMY_DATA.residentAddress.zip,\n        isValid: false\n      }\n    },\n    permanentAddress: {\n      houseNo: {\n        value: DUMMY_DATA.permanentAddress.houseNo,\n        isValid: false\n      },\n      street: {\n        value: DUMMY_DATA.permanentAddress.street,\n        isValid: false\n      },\n      locationType: {\n        value: DUMMY_DATA.permanentAddress.locationType,\n        isValid: false\n      },\n      barangay: {\n        value: DUMMY_DATA.permanentAddress.barangay,\n        isValid: false\n      },\n      city: {\n        value: DUMMY_DATA.permanentAddress.city,\n        isValid: false\n      },\n      province: {\n        value: DUMMY_DATA.permanentAddress.province,\n        isValid: false\n      },\n      zip: {\n        value: DUMMY_DATA.permanentAddress.zip,\n        isValid: false\n      }\n    },\n    telephoneNum: {\n      value: DUMMY_DATA.telephoneNum,\n      isValid: false\n    },\n    cellphoneNum: {\n      value: DUMMY_DATA.cellphoneNum,\n      isValid: false\n    },\n    alternateEmail: {\n      value: DUMMY_DATA.alternateEmail,\n      isValid: false\n    }\n  }, false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Resident Address\", /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rHouseNo\",\n        type: \"text\",\n        label: \"House no.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.houseNo.value,\n        initialValid: formState.inputs.residentAddress.houseNo.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rStreet\",\n        type: \"text\",\n        label: \"Street\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.street.value,\n        initialValid: formState.inputs.residentAddress.street.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rType\",\n        type: \"text\",\n        label: \"Type\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.locationType.value,\n        initialValid: formState.inputs.residentAddress.locationType.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rBarangay\",\n        type: \"text\",\n        label: \"Barangay\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.barangay.value,\n        initialValid: formState.inputs.residentAddress.barangay.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rProvince\",\n        type: \"text\",\n        label: \"Province\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.province.value,\n        initialValid: formState.inputs.residentAddress.province.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"rZip\",\n        type: \"text\",\n        label: \"Zip Code\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.residentAddress.zip.value,\n        initialValid: formState.inputs.residentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), \"Permanent Address\", /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pHouseNo\",\n        type: \"text\",\n        label: \"House no.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pStreet\",\n        type: \"text\",\n        label: \"Street\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pType\",\n        type: \"text\",\n        label: \"Type\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pBarangay\",\n        type: \"text\",\n        label: \"Barangay\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pProvince\",\n        type: \"text\",\n        label: \"Province\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pZip\",\n        type: \"text\",\n        label: \"Zip Code\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.permanentAddress.zip.value,\n        initialValid: formState.inputs.permanentAddress.zip.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), \"Addtl Info\", /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"telNo\",\n        type: \"text\",\n        label: \"Telephone No.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.telephoneNum.value,\n        initialValid: formState.inputs.telephoneNum.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"cellNo\",\n        type: \"text\",\n        label: \"Cellphone No.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.cellphoneNum.value,\n        initialValid: formState.inputs.cellphoneNum.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"alternateEmail\",\n        type: \"text\",\n        label: \"Alternate Email Address\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.alternateEmail.value,\n        initialValid: formState.inputs.alternateEmail.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactInfoEdit, \"NfDX2gDBBctf87ocjh/7Dzn5imI=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactInfoEdit;\nexport default ContactInfoEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactInfoEdit\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/user/components/ContactInformation/ContactInfoEdit.js"],"names":["React","Button","Input","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_OPTIONAL","DUMMY_DATA","residentAddress","houseNo","street","locationType","barangay","city","province","zip","permanentAddress","telephoneNum","cellphoneNum","alternateEmail","ContactInfoEdit","props","formState","inputHandler","setFormData","value","isValid","inputs"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\n\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_OPTIONAL,\n} from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\n\nconst DUMMY_DATA = {\n  //REPLACE WITH DATABASE\n  residentAddress: {\n    houseNo: \"TEST\",\n    street: \"TEST\",\n    locationType: \"1\",\n    barangay: \"TEST\",\n    city: \"TEST\",\n    province: \"TEST\",\n    zip: \"TEST\",\n  },\n  permanentAddress: {\n    houseNo: \"TEST2\",\n    street: \"TEST2\",\n    locationType: \"2\",\n    barangay: \"TEST2\",\n    city: \"TEST2\",\n    province: \"TEST2\",\n    zip: \"TEST2\",\n  },\n  telephoneNum: \"TEST\",\n  cellphoneNum: \"TEST\",\n  alternateEmail: \"TEST\",\n};\n\nconst ContactInfoEdit = (props) => {\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      residentAddress: {\n        houseNo: {\n          value: DUMMY_DATA.residentAddress.houseNo,\n          isValid: false,\n        },\n        street: {\n          value: DUMMY_DATA.residentAddress.street,\n          isValid: false,\n        },\n        locationType: {\n          value: DUMMY_DATA.residentAddress.locationType,\n          isValid: false,\n        },\n        barangay: {\n          value: DUMMY_DATA.residentAddress.barangay,\n          isValid: false,\n        },\n        city: {\n          value: DUMMY_DATA.residentAddress.city,\n          isValid: false,\n        },\n        province: {\n          value: DUMMY_DATA.residentAddress.province,\n          isValid: false,\n        },\n        zip: {\n          value: DUMMY_DATA.residentAddress.zip,\n          isValid: false,\n        },\n      },\n      permanentAddress: {\n        houseNo: {\n          value: DUMMY_DATA.permanentAddress.houseNo,\n          isValid: false,\n        },\n        street: {\n          value: DUMMY_DATA.permanentAddress.street,\n          isValid: false,\n        },\n        locationType: {\n          value: DUMMY_DATA.permanentAddress.locationType,\n          isValid: false,\n        },\n        barangay: {\n          value: DUMMY_DATA.permanentAddress.barangay,\n          isValid: false,\n        },\n        city: {\n          value: DUMMY_DATA.permanentAddress.city,\n          isValid: false,\n        },\n        province: {\n          value: DUMMY_DATA.permanentAddress.province,\n          isValid: false,\n        },\n        zip: {\n          value: DUMMY_DATA.permanentAddress.zip,\n          isValid: false,\n        },\n      },\n      telephoneNum: {\n        value: DUMMY_DATA.telephoneNum,\n        isValid: false,\n      },\n      cellphoneNum: {\n        value: DUMMY_DATA.cellphoneNum,\n        isValid: false,\n      },\n      alternateEmail: {\n        value: DUMMY_DATA.alternateEmail,\n        isValid: false,\n      },\n    },\n    false\n  );\n  return (\n    <React.Fragment>\n      <form>\n        Resident Address\n        <Input\n          element=\"input\"\n          id=\"rHouseNo\"\n          type=\"text\"\n          label=\"House no.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.houseNo.value}\n          initialValid={formState.inputs.residentAddress.houseNo.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"rStreet\"\n          type=\"text\"\n          label=\"Street\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.street.value}\n          initialValid={formState.inputs.residentAddress.street.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"rType\"\n          type=\"text\"\n          label=\"Type\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.locationType.value}\n          initialValid={formState.inputs.residentAddress.locationType.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"rBarangay\"\n          type=\"text\"\n          label=\"Barangay\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.barangay.value}\n          initialValid={formState.inputs.residentAddress.barangay.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"rProvince\"\n          type=\"text\"\n          label=\"Province\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.province.value}\n          initialValid={formState.inputs.residentAddress.province.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"rZip\"\n          type=\"text\"\n          label=\"Zip Code\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.residentAddress.zip.value}\n          initialValid={formState.inputs.residentAddress.zip.isValid}\n        />\n        Permanent Address\n        <Input\n          element=\"input\"\n          id=\"pHouseNo\"\n          type=\"text\"\n          label=\"House no.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pStreet\"\n          type=\"text\"\n          label=\"Street\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pType\"\n          type=\"text\"\n          label=\"Type\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pBarangay\"\n          type=\"text\"\n          label=\"Barangay\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pProvince\"\n          type=\"text\"\n          label=\"Province\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pZip\"\n          type=\"text\"\n          label=\"Zip Code\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.permanentAddress.zip.value}\n          initialValid={formState.inputs.permanentAddress.zip.isValid}\n        />\n        Addtl Info\n        <Input\n          element=\"input\"\n          id=\"telNo\"\n          type=\"text\"\n          label=\"Telephone No.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.telephoneNum.value}\n          initialValid={formState.inputs.telephoneNum.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"cellNo\"\n          type=\"text\"\n          label=\"Cellphone No.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.cellphoneNum.value}\n          initialValid={formState.inputs.cellphoneNum.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"alternateEmail\"\n          type=\"text\"\n          label=\"Alternate Email Address\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.alternateEmail.value}\n          initialValid={formState.inputs.alternateEmail.isValid}\n        />\n      </form>\n      <Button inverse>Save</Button>\n    </React.Fragment>\n  );\n};\n\nexport default ContactInfoEdit;\n"]},"metadata":{},"sourceType":"module"}