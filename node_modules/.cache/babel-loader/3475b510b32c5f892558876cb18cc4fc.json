{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL I5\\\\Documents\\\\React\\\\Projects\\\\faculty-management-master\\\\src\\\\user\\\\components\\\\Training\\\\TrainingEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_OPTIONAL } from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrainingEdit = props => {\n  _s();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"title\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"type\",\n        type: \"text\",\n        label: \"Type\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"fromDate\",\n        type: \"text\",\n        label: \"From\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"toDate\",\n        type: \"text\",\n        label: \"To\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"hours\",\n        type: \"text\",\n        label: \"No. of Hours\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"typeOfLearning\",\n        type: \"text\",\n        label: \"Type of Learning\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"conducted\",\n        type: \"text\",\n        label: \"Conducted/Sponsored\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      children: props.isEditMode ? \"Save\" : \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingEdit, \"NfDX2gDBBctf87ocjh/7Dzn5imI=\", false, function () {\n  return [useForm];\n});\n\n_c = TrainingEdit;\nexport default TrainingEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingEdit\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/user/components/Training/TrainingEdit.js"],"names":["React","Button","Input","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_OPTIONAL","TrainingEdit","props","formState","inputHandler","setFormData","email","value","isValid","password","isEditMode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\n\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_OPTIONAL,\n} from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\n\nconst TrainingEdit = (props) => {\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n  return (\n    <React.Fragment>\n      <form>\n        <Input\n          element=\"input\"\n          id=\"title\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"type\"\n          type=\"text\"\n          label=\"Type\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"fromDate\"\n          type=\"text\"\n          label=\"From\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"toDate\"\n          type=\"text\"\n          label=\"To\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"hours\"\n          type=\"text\"\n          label=\"No. of Hours\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"typeOfLearning\"\n          type=\"text\"\n          label=\"Type of Learning\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"conducted\"\n          type=\"text\"\n          label=\"Conducted/Sponsored\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n        />\n      </form>\n      <Button inverse>{props.isEditMode ? \"Save\" : \"Add\"}</Button>\n    </React.Fragment>\n  );\n};\n\nexport default TrainingEdit;\n"]},"metadata":{},"sourceType":"module"}