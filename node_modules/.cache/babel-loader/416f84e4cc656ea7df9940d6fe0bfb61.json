{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL I5\\\\Documents\\\\React\\\\Projects\\\\faculty-management-master\\\\src\\\\auth\\\\pages\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./Auth.css\";\nimport bulsuLogo from \"../../assets/Image/bulsu.png\";\nimport cictLogo from \"../../assets/Image/cict.png\";\nimport cictBuilding from \"../../assets/Image/pimentel.png\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  }; // const authSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n\n\n  const testLoginAdmin = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.loginAsAdmin();\n  };\n\n  const testLoginUser = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.loginAsUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"authentication\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-img-cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cict-text-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: bulsuLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cictLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"txt-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"College of Information and Communications Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Faculty Management Information Systems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cictBuilding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-form-cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-mode-title\",\n          children: isLoginMode ? \"LOGIN TO YOUR ACCOUNT\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"employeeNum\",\n            type: \"text\" // label=\"Employee Number\"\n            ,\n            placeholder: \"Employee Number\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Invalid Email\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"fName\",\n            type: \"text\" // label=\"First Name\"\n            ,\n            placeholder: \"First Name\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Invalid Email\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"lName\",\n            type: \"text\" // label=\"Last Name\"\n            ,\n            placeholder: \"Last Name\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Invalid Email\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            element: \"input\",\n            id: \"email\",\n            type: \"text\" // label=\"Email\"\n            ,\n            placeholder: \"Email\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Invalid Email\",\n            onInput: inputHandler,\n            label: \"Outlined\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"email\",\n            type: \"text\" // label=\"Email\"\n            ,\n            placeholder: \"Email\",\n            validators: [VALIDATOR_EMAIL()],\n            errorText: \"Invalid Email\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            element: \"input\",\n            id: \"password\",\n            type: \"password\" // label=\"Password\"\n            ,\n            placeholder: \"Password\",\n            validators: [VALIDATOR_MINLENGTH(6)],\n            errorText: \"Minimum of 6 characters\",\n            onInput: inputHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: testLoginUser,\n            children: isLoginMode ? \"Test Log in User\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), isLoginMode && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: testLoginAdmin,\n            children: \"Test Log in Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), isLoginMode ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: switchModeHandler,\n            children: \"Create an account here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Forgot your password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: switchModeHandler,\n              children: \"Reset your password here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: switchModeHandler,\n            children: \"Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"h5UvDBL9Mt3NjLaCb8TGa3uBcq8=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/auth/pages/Auth.js"],"names":["React","useState","useContext","AuthContext","Button","Input","Card","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","bulsuLogo","cictLogo","cictBuilding","TextField","Auth","auth","isLoginMode","setIsLoginMode","isAdmin","setIsAdmin","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","testLoginAdmin","event","preventDefault","console","log","loginAsAdmin","testLoginUser","loginAsUser"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/utils/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./Auth.css\";\n\nimport bulsuLogo from \"../../assets/Image/bulsu.png\";\nimport cictLogo from \"../../assets/Image/cict.png\";\nimport cictBuilding from \"../../assets/Image/pimentel.png\";\nimport { TextField } from \"@mui/material\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  // const authSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n  const testLoginAdmin = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.loginAsAdmin();\n  };\n  const testLoginUser = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.loginAsUser();\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <div className=\"main-container\">\n        <div className=\"main-img-cont\">\n          <div className=\"cict-text-container\">\n            <div className=\"logo-container\">\n              <img src={bulsuLogo} />\n              <img src={cictLogo} />\n            </div>\n            <div className=\"txt-container\">\n              <h3>College of Information and Communications Technology</h3>\n              <h5>Faculty Management Information Systems</h5>\n            </div>\n          </div>\n          <div className=\"img-container\">\n            <img src={cictBuilding} />\n          </div>\n        </div>\n        <div className=\"main-form-cont\">\n          {/* <Router>{routes}</Router> */}\n          <h2 className=\"login-mode-title\">{isLoginMode ? \"LOGIN TO YOUR ACCOUNT\" : \"Register\"}</h2>\n          <form>\n            {!isLoginMode && (\n              <Input\n                element=\"input\"\n                id=\"employeeNum\"\n                type=\"text\"\n                // label=\"Employee Number\"\n                placeholder=\"Employee Number\"\n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Invalid Email\"\n                onInput={inputHandler}\n              />\n            )}\n            {!isLoginMode && (\n              <Input\n                element=\"input\"\n                id=\"fName\"\n                type=\"text\"\n                // label=\"First Name\"\n                placeholder=\"First Name\"\n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Invalid Email\"\n                onInput={inputHandler}\n              />\n            )}\n            {!isLoginMode && (\n              <Input\n                element=\"input\"\n                id=\"lName\"\n                type=\"text\"\n                // label=\"Last Name\"\n                placeholder=\"Last Name\"\n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Invalid Email\"\n                onInput={inputHandler}\n              />\n            )}\n            <TextField \n              element=\"input\"\n              id=\"email\"\n              type=\"text\"\n              // label=\"Email\"\n              placeholder=\"Email\"\n              validators={[VALIDATOR_EMAIL()]}\n              errorText=\"Invalid Email\"\n              onInput={inputHandler}\n              label=\"Outlined\" \n              variant=\"outlined\"\n            />\n            <Input\n              element=\"input\"\n              id=\"email\"\n              type=\"text\"\n              // label=\"Email\"\n              placeholder=\"Email\"\n              validators={[VALIDATOR_EMAIL()]}\n              errorText=\"Invalid Email\"\n              onInput={inputHandler}\n            />\n            <Input\n              element=\"input\"\n              id=\"password\"\n              type=\"password\"\n              // label=\"Password\"\n              placeholder=\"Password\"\n              validators={[VALIDATOR_MINLENGTH(6)]}\n              errorText=\"Minimum of 6 characters\"\n              onInput={inputHandler}\n            />\n            {/* <Button type=\"submit\">\n              {isLoginMode ? \"Test Log in User\" : \"Register\"}\n            </Button> */}\n            <Button onClick={testLoginUser}>\n              {isLoginMode ? \"Test Log in User\" : \"Register\"}\n            </Button>\n            {isLoginMode && (\n              <Button onClick={testLoginAdmin}>Test Log in Admin</Button>\n            )}\n          </form>\n          \n          {isLoginMode ? \n            <h6>Don't have an account? <a onClick={switchModeHandler}>Create an account here</a>\n            <h6>Forgot your password? <a onClick={switchModeHandler}>Reset your password here</a></h6></h6> : \n            <h6>Already have an account? <a onClick={switchModeHandler}>Login here</a></h6>\n          }\n\n          {/* <Button inverse onClick={switchModeHandler}>\n            {isLoginMode ? \"Sign Up\" : \"Log in\"}\n          </Button> */}\n        </div>\n      </div>\n      \n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}