{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL I5\\\\Documents\\\\React\\\\Projects\\\\faculty-management-master\\\\src\\\\user\\\\components\\\\TopActionBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./TopActionBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopActionBar = props => {\n  _s();\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(props.isEditMode);\n  useEffect(() => {\n    setIsEditMode(props.isEditMode);\n  }, [props.isEditMode]);\n\n  const showCancelEditHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n    props.updateEditModeState(false);\n  };\n\n  const confirmDeleteHandler = () => {\n    setShowConfirmModal(false); // console.log(\"Cancelling...\");\n    // props.updateEditModeState(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onCancel: cancelDeleteHandler,\n      header: \"Cancel editing?\",\n      footerClass: \"place-item__modal-actions\",\n      footer: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          inverse: true,\n          onClick: cancelDeleteHandler,\n          children: \"YES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          onClick: confirmDeleteHandler,\n          children: \"NO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you want to cancel editing? Changes will not be saved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-action\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [props.inOverview && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this), !isEditMode && !props.inOverview && /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: props.onClick,\n          children: props.inBasicInformation || props.inContactInformation ? \"Edit\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: showCancelEditHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopActionBar, \"9oVozxdG/WxC/oVhMliyjug9LIo=\");\n\n_c = TopActionBar;\nexport default TopActionBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopActionBar\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/user/components/TopActionBar.js"],"names":["React","useEffect","useState","Modal","Button","TopActionBar","props","showConfirmModal","setShowConfirmModal","isEditMode","setIsEditMode","showCancelEditHandler","cancelDeleteHandler","updateEditModeState","confirmDeleteHandler","inOverview","onClick","inBasicInformation","inContactInformation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACI,KAAK,CAACG,UAAP,CAA5C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAACJ,KAAK,CAACG,UAAP,CAAb;AACD,GAFQ,EAEN,CAACH,KAAK,CAACG,UAAP,CAFM,CAAT;;AAIA,QAAME,qBAAqB,GAAG,MAAM;AAClCH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAIA,QAAMI,mBAAmB,GAAG,MAAM;AAChCJ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,IAAAA,KAAK,CAACO,mBAAN,CAA0B,KAA1B;AACD,GAHD;;AAKA,QAAMC,oBAAoB,GAAG,MAAM;AACjCN,IAAAA,mBAAmB,CAAC,KAAD,CAAnB,CADiC,CAEjC;AACA;AACD,GAJD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAED,gBADR;AAEE,MAAA,QAAQ,EAAEK,mBAFZ;AAGE,MAAA,MAAM,EAAC,iBAHT;AAIE,MAAA,WAAW,EAAC,2BAJd;AAKE,MAAA,MAAM,eACJ,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,OAAO,EAAEA,mBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,OAAO,EAAEE,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,6BAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAA,mBACGR,KAAK,CAACS,UAAN,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB,EAEG,CAACN,UAAD,IAAe,CAACH,KAAK,CAACS,UAAtB,iBACC;AAAI,UAAA,OAAO,EAAET,KAAK,CAACU,OAAnB;AAAA,oBACGV,KAAK,CAACW,kBAAN,IAA4BX,KAAK,CAACY,oBAAlC,GACG,MADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,gBAHJ,EASGT,UAAU,iBAAI;AAAI,UAAA,OAAO,EAAEE,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAzDD;;GAAMN,Y;;KAAAA,Y;AA2DN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./TopActionBar.css\";\n\nconst TopActionBar = (props) => {\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(props.isEditMode);\n\n  useEffect(() => {\n    setIsEditMode(props.isEditMode);\n  }, [props.isEditMode]);\n\n  const showCancelEditHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n    props.updateEditModeState(false);\n  };\n\n  const confirmDeleteHandler = () => {\n    setShowConfirmModal(false);\n    // console.log(\"Cancelling...\");\n    // props.updateEditModeState(false);\n  };\n  return (\n    <React.Fragment>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Cancel editing?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              YES\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              NO\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>Do you want to cancel editing? Changes will not be saved.</p>\n      </Modal>\n      <div className=\"top-action\">\n        <ul>\n          {props.inOverview && <li>Print</li>}\n          {!isEditMode && !props.inOverview && (\n            <li onClick={props.onClick}>\n              {props.inBasicInformation || props.inContactInformation\n                ? \"Edit\"\n                : \"Add\"}\n            </li>\n          )}\n          {isEditMode && <li onClick={showCancelEditHandler}>Cancel</li>}\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TopActionBar;\n"]},"metadata":{},"sourceType":"module"}