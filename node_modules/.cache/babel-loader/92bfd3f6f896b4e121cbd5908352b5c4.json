{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL I5\\\\Documents\\\\React\\\\Projects\\\\faculty-management-master\\\\src\\\\user\\\\components\\\\BasicInformation\\\\BasicInfoEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_OPTIONAL } from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = {\n  //REPLACE WITH DATABASE\n  userId: \"333\",\n  employeeNumber: \"223111\",\n  firstName: \"TEST TITLE 1\",\n  middleName: \"TEST TYPE 1\",\n  lastName: \"2020 1\",\n  contact: \"23213111\",\n  email: \"TEST EMAIL\",\n  extensionName: \"TEST EXTENSION\",\n  bday: \"2022\",\n  age: \"12\",\n  placeOfBirth: \"TEST PLACE\",\n  gender: \"Male\",\n  civilStatus: \"Single\",\n  height: \"4.5\",\n  weight: \"25\",\n  bloodType: \"AB\",\n  gssID: \"TEST\",\n  pagibigID: \"TEST\",\n  philhealth: \"TEST\",\n  sssNO: \"TEST\",\n  tinNO: \"TEST\",\n  citizenship: \"TEST\"\n};\n\nconst BasicInfoEdit = props => {\n  _s();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    firstName: {\n      value: DUMMY_DATA.firstName,\n      isValid: true\n    },\n    middleName: {\n      value: DUMMY_DATA.middleName,\n      isValid: true\n    },\n    lastName: {\n      value: DUMMY_DATA.lastName,\n      isValid: true\n    },\n    contact: {\n      value: DUMMY_DATA.contact,\n      isValid: true\n    },\n    email: {\n      value: DUMMY_DATA.email,\n      isValid: true\n    },\n    extensionName: {\n      value: DUMMY_DATA.extensionName,\n      isValid: true\n    },\n    bday: {\n      value: DUMMY_DATA.bday,\n      isValid: true\n    },\n    placeOfBirth: {\n      value: DUMMY_DATA.placeOfBirth,\n      isValid: true\n    },\n    gender: {\n      value: DUMMY_DATA.gender,\n      isValid: true\n    },\n    civilStatus: {\n      value: DUMMY_DATA.civilStatus,\n      isValid: true\n    },\n    height: {\n      value: DUMMY_DATA.height,\n      isValid: true\n    },\n    weight: {\n      value: DUMMY_DATA.weight,\n      isValid: true\n    },\n    bloodType: {\n      value: DUMMY_DATA.bloodType,\n      isValid: true\n    },\n    gssID: {\n      value: DUMMY_DATA.gssID,\n      isValid: true\n    },\n    pagibigID: {\n      value: DUMMY_DATA.pagibigID,\n      isValid: true\n    },\n    philhealth: {\n      value: DUMMY_DATA.philhealth,\n      isValid: true\n    },\n    sssNO: {\n      value: DUMMY_DATA.sssNO,\n      isValid: true\n    },\n    tinNO: {\n      value: DUMMY_DATA.tinNO,\n      isValid: true\n    },\n    citizenship: {\n      value: DUMMY_DATA.citizenship,\n      isValid: true\n    }\n  }, false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"fName\",\n        type: \"text\",\n        label: \"First Name\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.firstName.value,\n        initialValid: formState.inputs.firstName.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"mName\",\n        type: \"text\",\n        label: \"Middle Name\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.middleName.value,\n        initialValid: formState.inputs.middleName.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"lName\",\n        type: \"text\",\n        label: \"Last Name\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.lastName.value,\n        initialValid: formState.inputs.lastName.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"contact\",\n        type: \"text\",\n        label: \"Contact\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.contact.value,\n        initialValid: formState.inputs.contact.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"email\",\n        type: \"text\",\n        label: \"Email\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.email.value,\n        initialValid: formState.inputs.email.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"eName\",\n        type: \"text\",\n        label: \"Extension Name\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.extensionName.value,\n        initialValid: formState.inputs.extensionName.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"bday\",\n        type: \"text\",\n        label: \"Birthday\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.bday.value,\n        initialValid: formState.inputs.bday.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"placeOfBirth\",\n        type: \"text\",\n        label: \"Place of Birth\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.placeOfBirth.value,\n        initialValid: formState.inputs.placeOfBirth.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"gender\",\n        type: \"text\",\n        label: \"Gender\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.gender.value,\n        initialValid: formState.inputs.gender.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"civilStatus\",\n        type: \"text\",\n        label: \"Civil Status\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.civilStatus.value,\n        initialValid: formState.inputs.civilStatus.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"height\",\n        type: \"text\",\n        label: \"Height\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.height.value,\n        initialValid: formState.inputs.height.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"weight\",\n        type: \"text\",\n        label: \"Weight\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.weight.value,\n        initialValid: formState.inputs.weight.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"bloodType\",\n        type: \"text\",\n        label: \"Blood Type\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.bloodType.value,\n        initialValid: formState.inputs.bloodType.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"gssID\",\n        type: \"text\",\n        label: \"GSS ID\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.gssID.value,\n        initialValid: formState.inputs.gssID.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"pagibigID\",\n        type: \"text\",\n        label: \"Pagibig ID\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.pagibigID.value,\n        initialValid: formState.inputs.pagibigID.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"philhealth\",\n        type: \"text\",\n        label: \"Philhealth\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.philhealth.value,\n        initialValid: formState.inputs.philhealth.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"sssNo\",\n        type: \"text\",\n        label: \"SSS No.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.sssNO.value,\n        initialValid: formState.inputs.sssNO.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"tinNo\",\n        type: \"text\",\n        label: \"TIN No.\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.tinNO.value,\n        initialValid: formState.inputs.tinNO.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"citizenship\",\n        type: \"text\",\n        label: \"Citizenship\",\n        validators: [VALIDATOR_OPTIONAL()],\n        errorText: \"Invalid Email\",\n        onInput: inputHandler,\n        initialValue: formState.inputs.citizenship.value,\n        initialValid: formState.inputs.citizenship.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicInfoEdit, \"NfDX2gDBBctf87ocjh/7Dzn5imI=\", false, function () {\n  return [useForm];\n});\n\n_c = BasicInfoEdit;\nexport default BasicInfoEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInfoEdit\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/user/components/BasicInformation/BasicInfoEdit.js"],"names":["React","Button","Input","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_OPTIONAL","DUMMY_DATA","userId","employeeNumber","firstName","middleName","lastName","contact","email","extensionName","bday","age","placeOfBirth","gender","civilStatus","height","weight","bloodType","gssID","pagibigID","philhealth","sssNO","tinNO","citizenship","BasicInfoEdit","props","formState","inputHandler","setFormData","value","isValid","inputs"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"../../../shared/components/FormElements/Button\";\n\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_OPTIONAL,\n} from \"../../../shared/utils/validators\";\nimport \"../../components/EditForm.css\";\n\nconst DUMMY_DATA = {\n  //REPLACE WITH DATABASE\n  userId: \"333\",\n  employeeNumber: \"223111\",\n  firstName: \"TEST TITLE 1\",\n  middleName: \"TEST TYPE 1\",\n  lastName: \"2020 1\",\n  contact: \"23213111\",\n  email: \"TEST EMAIL\",\n  extensionName: \"TEST EXTENSION\",\n  bday: \"2022\",\n  age: \"12\",\n  placeOfBirth: \"TEST PLACE\",\n  gender: \"Male\",\n  civilStatus: \"Single\",\n  height: \"4.5\",\n  weight: \"25\",\n  bloodType: \"AB\",\n  gssID: \"TEST\",\n  pagibigID: \"TEST\",\n  philhealth: \"TEST\",\n  sssNO: \"TEST\",\n  tinNO: \"TEST\",\n  citizenship: \"TEST\",\n};\n\nconst BasicInfoEdit = (props) => {\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      firstName: {\n        value: DUMMY_DATA.firstName,\n        isValid: true,\n      },\n      middleName: {\n        value: DUMMY_DATA.middleName,\n        isValid: true,\n      },\n      lastName: {\n        value: DUMMY_DATA.lastName,\n        isValid: true,\n      },\n      contact: {\n        value: DUMMY_DATA.contact,\n        isValid: true,\n      },\n      email: {\n        value: DUMMY_DATA.email,\n        isValid: true,\n      },\n      extensionName: {\n        value: DUMMY_DATA.extensionName,\n        isValid: true,\n      },\n      bday: {\n        value: DUMMY_DATA.bday,\n        isValid: true,\n      },\n      placeOfBirth: {\n        value: DUMMY_DATA.placeOfBirth,\n        isValid: true,\n      },\n      gender: {\n        value: DUMMY_DATA.gender,\n        isValid: true,\n      },\n      civilStatus: {\n        value: DUMMY_DATA.civilStatus,\n        isValid: true,\n      },\n      height: {\n        value: DUMMY_DATA.height,\n        isValid: true,\n      },\n      weight: {\n        value: DUMMY_DATA.weight,\n        isValid: true,\n      },\n      bloodType: {\n        value: DUMMY_DATA.bloodType,\n        isValid: true,\n      },\n      gssID: {\n        value: DUMMY_DATA.gssID,\n        isValid: true,\n      },\n      pagibigID: {\n        value: DUMMY_DATA.pagibigID,\n        isValid: true,\n      },\n      philhealth: {\n        value: DUMMY_DATA.philhealth,\n        isValid: true,\n      },\n      sssNO: {\n        value: DUMMY_DATA.sssNO,\n        isValid: true,\n      },\n      tinNO: {\n        value: DUMMY_DATA.tinNO,\n        isValid: true,\n      },\n      citizenship: {\n        value: DUMMY_DATA.citizenship,\n        isValid: true,\n      },\n\n    },\n    false\n  );\n  return (\n    <React.Fragment>\n      <form>\n        <Input\n          element=\"input\"\n          id=\"fName\"\n          type=\"text\"\n          label=\"First Name\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.firstName.value}\n          initialValid={formState.inputs.firstName.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"mName\"\n          type=\"text\"\n          label=\"Middle Name\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.middleName.value}\n          initialValid={formState.inputs.middleName.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"lName\"\n          type=\"text\"\n          label=\"Last Name\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.lastName.value}\n          initialValid={formState.inputs.lastName.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"contact\"\n          type=\"text\"\n          label=\"Contact\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.contact.value}\n          initialValid={formState.inputs.contact.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"text\"\n          label=\"Email\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.email.value}\n          initialValid={formState.inputs.email.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"eName\"\n          type=\"text\"\n          label=\"Extension Name\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.extensionName.value}\n          initialValid={formState.inputs.extensionName.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"bday\"\n          type=\"text\"\n          label=\"Birthday\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.bday.value}\n          initialValid={formState.inputs.bday.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"placeOfBirth\"\n          type=\"text\"\n          label=\"Place of Birth\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.placeOfBirth.value}\n          initialValid={formState.inputs.placeOfBirth.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"gender\"\n          type=\"text\"\n          label=\"Gender\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.gender.value}\n          initialValid={formState.inputs.gender.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"civilStatus\"\n          type=\"text\"\n          label=\"Civil Status\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.civilStatus.value}\n          initialValid={formState.inputs.civilStatus.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"height\"\n          type=\"text\"\n          label=\"Height\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.height.value}\n          initialValid={formState.inputs.height.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"weight\"\n          type=\"text\"\n          label=\"Weight\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.weight.value}\n          initialValid={formState.inputs.weight.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"bloodType\"\n          type=\"text\"\n          label=\"Blood Type\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.bloodType.value}\n          initialValid={formState.inputs.bloodType.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"gssID\"\n          type=\"text\"\n          label=\"GSS ID\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.gssID.value}\n          initialValid={formState.inputs.gssID.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"pagibigID\"\n          type=\"text\"\n          label=\"Pagibig ID\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.pagibigID.value}\n          initialValid={formState.inputs.pagibigID.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"philhealth\"\n          type=\"text\"\n          label=\"Philhealth\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.philhealth.value}\n          initialValid={formState.inputs.philhealth.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"sssNo\"\n          type=\"text\"\n          label=\"SSS No.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.sssNO.value}\n          initialValid={formState.inputs.sssNO.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"tinNo\"\n          type=\"text\"\n          label=\"TIN No.\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.tinNO.value}\n          initialValid={formState.inputs.tinNO.isValid}\n        />\n        <Input\n          element=\"input\"\n          id=\"citizenship\"\n          type=\"text\"\n          label=\"Citizenship\"\n          validators={[VALIDATOR_OPTIONAL()]}\n          errorText=\"Invalid Email\"\n          onInput={inputHandler}\n          initialValue={formState.inputs.citizenship.value}\n          initialValid={formState.inputs.citizenship.isValid}\n        />\n      </form>\n      <Button inverse>Save</Button>\n    </React.Fragment>\n  );\n};\n\nexport default BasicInfoEdit;\n"]},"metadata":{},"sourceType":"module"}