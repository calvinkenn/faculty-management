{"ast":null,"code":"const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\nconst VALIDATOR_TYPE_OPTIONAL = \"OPTIONAL\";\nexport const VALIDATOR_REQUIRE = () => ({\n  type: VALIDATOR_TYPE_REQUIRE\n});\n_c = VALIDATOR_REQUIRE;\nexport const VALIDATOR_FILE = () => ({\n  type: VALIDATOR_TYPE_FILE\n});\n_c2 = VALIDATOR_FILE;\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\n_c3 = VALIDATOR_MINLENGTH;\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\n_c4 = VALIDATOR_MAXLENGTH;\nexport const VALIDATOR_MIN = val => ({\n  type: VALIDATOR_TYPE_MIN,\n  val: val\n});\n_c5 = VALIDATOR_MIN;\nexport const VALIDATOR_MAX = val => ({\n  type: VALIDATOR_TYPE_MAX,\n  val: val\n});\n_c6 = VALIDATOR_MAX;\nexport const VALIDATOR_EMAIL = () => ({\n  type: VALIDATOR_TYPE_EMAIL\n});\n_c7 = VALIDATOR_EMAIL;\nexport const VALIDATOR_OPTIONAL = () => ({\n  type: VALIDATOR_TYPE_OPTIONAL\n});\n_c8 = VALIDATOR_OPTIONAL;\nexport const validate = (value, validators) => {\n  let isValid = true;\n\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n\n    if (validator.type === VALIDATOR_TYPE_OPTIONAL) {\n      isValid = true;\n    }\n  }\n\n  return isValid;\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"VALIDATOR_REQUIRE\");\n$RefreshReg$(_c2, \"VALIDATOR_FILE\");\n$RefreshReg$(_c3, \"VALIDATOR_MINLENGTH\");\n$RefreshReg$(_c4, \"VALIDATOR_MAXLENGTH\");\n$RefreshReg$(_c5, \"VALIDATOR_MIN\");\n$RefreshReg$(_c6, \"VALIDATOR_MAX\");\n$RefreshReg$(_c7, \"VALIDATOR_EMAIL\");\n$RefreshReg$(_c8, \"VALIDATOR_OPTIONAL\");","map":{"version":3,"sources":["C:/Users/INTEL I5/Documents/React/Projects/faculty-management-master/src/shared/utils/validators.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_TYPE_OPTIONAL","VALIDATOR_REQUIRE","type","VALIDATOR_FILE","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_MIN","VALIDATOR_MAX","VALIDATOR_EMAIL","VALIDATOR_OPTIONAL","validate","value","validators","isValid","validator","trim","length","test"],"mappings":"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","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\nconst VALIDATOR_TYPE_OPTIONAL = \"OPTIONAL\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\nexport const VALIDATOR_OPTIONAL = () => ({ type: VALIDATOR_TYPE_OPTIONAL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n    if (validator.type === VALIDATOR_TYPE_OPTIONAL) {\n      isValid = true;\n    }\n  }\n  return isValid;\n};\n"]},"metadata":{},"sourceType":"module"}